pipeline {
    agent any
    tools {
        maven 'maven'
    }
    stages {
        stage("Clean up") {
            steps { 
                deleteDir()
            }
        }
        stage("Clone repo") {
            steps {
                script {
                    try {
                        git branch: 'main', credentialsId: 'your-credential-id', url: 'https://github.com/abir5255/backend_spring.git'
                    } catch (Exception e) {
                        echo "Erreur lors du clonage du dépôt Git : ${e.message}"
                        currentBuild.result = 'FAILURE'
                    }
                }
            }
        }
      stage("Run docker compose") {
    steps {
        script {
            def projectDir = "C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\firstpipeline"
            bat "cd \"${projectDir}\" && docker-compose up -d"
        }
    }
}

    }
}
